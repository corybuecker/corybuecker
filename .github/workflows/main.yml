name: Build and deploy production to GKE

on:
  push:
    branches:
      - master

env:
  CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
  CLOUDSDK_COMPUTE_REGION: us-central1
  CLOUDSDK_COMPUTE_ZONE: us-central1-c
  MIX_ENV: prod
  NODE_ENV: production

jobs:
  build-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Elixir
        uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: 22.2.1
          elixir-version: 1.10.2

      - name: Setup Node
        uses: actions/setup-node@v1.3.0
        with:
          node-version: 13.11.0

      - name: Setup GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 274.0.1
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Setup Docker
        run: gcloud auth configure-docker

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Kustomize
        run: |
          curl -o kustomize.tar.gz --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.5.4/kustomize_v3.5.4_linux_amd64.tar.gz
          tar zxvf kustomize.tar.gz
          chmod u+x ./kustomize

      - name: Backend dependency caching
        uses: actions/cache@v1.1.0
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Frontend dependency caching
        uses: actions/cache@v1.1.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Download frontend dependencies
        run: npm install

      - name: Download and build backend dependencies
        run: mix deps.get && mix deps.compile

      - name: Lint backend
        run: mix credo --strict

      - name: Build backend
        run: mix run -e "Builder.build"

      - name: Build frontend
        run: npx webpack

      - name: Build image
        run: docker build -t ${{ secrets.IMAGE_TAG }}:${{ github.sha }} .

      - name: Push image
        run: docker push ${{ secrets.IMAGE_TAG }}:${{ github.sha }}

      - name: Deploy
        run: |
          gcloud container clusters get-credentials ${{ secrets. CLUSTER_NAME }}
          cd ./k8s/production
          cp ../../kustomize ./
          ./kustomize edit set image nginx=${{ secrets.IMAGE_TAG }}:${{ github.sha }}
          ./kustomize build . | kubectl apply -f -
