name: Integration

on:
  push:
    branches:
      - integration

env:
  CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
  CLOUDSDK_COMPUTE_REGION: us-central1
  CLOUDSDK_COMPUTE_ZONE: us-central1-c
  MIX_ENV: integration
  NODE_ENV: production

jobs:
  merge_check:
    name: Merge

    runs-on: ubuntu-latest

    needs:
      - frontend
      - backend
      - deploy

    steps:
      - run: echo 'Ok to merge'
 
  deploy:
    name: Deploy
    needs:
      - frontend
      - backend
    runs-on: ubuntu-latest
    steps:
      - name: Setup GCP
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 274.0.1
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}

      - name: Setup Node
        uses: actions/setup-node@master
        with:
          node-version: 14.3.0

      - name: Setup Elixir
        uses: actions/setup-elixir@master
        with:
          otp-version: 22.2.1
          elixir-version: 1.10.3

      - name: Setup Docker
        run: gcloud auth configure-docker

      - name: Checkout
        uses: actions/checkout@master

      - name: Download frontend dependencies
        run: npm install

      - name: Download and build backend dependencies
        run: mix deps.get && mix deps.compile

      - name: Build frontend
        run: npx webpack --config webpack.integration.config.js

      - name: Build backend
        run: mix run -e "Builder.build"

      - name: Build image
        run: docker build -t ${{ secrets.IMAGE_TAG }}:integration-${{ github.sha }} .

      - name: Push image
        run: docker push ${{ secrets.IMAGE_TAG }}:integration-${{ github.sha }}

      - name: Configure kubectl
        run: gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }}

      - name: Deploy
        run: kubectl --namespace integration set image --record deployment/corybuecker-com corybuecker-com=${{ secrets.IMAGE_TAG }}:integration-${{ github.sha }}

  frontend:
    name: Frontend checks
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@master
        with:
          node-version: 14.3.0
      
      - name: Checkout
        uses: actions/checkout@master

      - name: Download frontend dependencies
        run: npm install

      - name: Check outdated
        run: npm outdated

      - name: Audit
        run: npm audit

      - name: Lint
        run: npx eslint '*/**/*.{js,ts,tsx,json}' --max-warnings 0

      - name: Build frontend
        run: npx webpack --config webpack.integration.config.js

  backend:
    name: Backend checks
    runs-on: ubuntu-latest
    steps:
      - name: Setup Elixir
        uses: actions/setup-elixir@master
        with:
          otp-version: 22.2.1
          elixir-version: 1.10.3

      - name: Checkout
        uses: actions/checkout@master

      - name: Download and build backend dependencies
        run: mix deps.get && mix deps.compile

      - name: Check outdated
        run: mix hex.outdated

      - name: Lint
        run: mix credo --strict

      - name: Build backend
        run: mix run -e "Builder.build"
